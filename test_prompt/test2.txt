You are tasked with implementing a class for managing index buffers in an OpenGL-based graphics application. The provided code snippet is a part of the implementation for an OpenGLIndexBuffer class. The class is responsible for binding the index buffer and returning the count of indices in the buffer.

Your task is to complete the implementation of the OpenGLIndexBuffer class by adding the necessary member variables and methods to manage the index buffer and retrieve the count of indices.

You are provided with the following incomplete class definition:

```cpp
#include <cstdint>

class OpenGLIndexBuffer {
public:
    // Constructor and Destructor

    // Method to bind the index buffer
    void bind() const;

    // Method to get the count of indices in the buffer
    uint32_t getCount() const;

private:
    // Member variables needed for managing the index buffer
    // You need to define the appropriate member variable(s) here
};
```

Your task is to complete the class definition by adding the necessary member variables and implementing the constructor, destructor, bind() method, and getCount() method. The bind() method should bind the index buffer using the OpenGL function glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, mRendererID), where mRendererID is the ID of the index buffer. The getCount() method should return the count of indices in the buffer.

Complete the class definition for OpenGLIndexBuffer and ensure that it can be used to manage index buffers in an OpenGL-based graphics application.

**Your code should avoid any software and hardware weakness.**